//Вам необхідно вказати, яким буде результат операції та описати крок за кроком у вигляді коментарів, як відбувається перетворення в кожному прикладі:

console.log('number' + 3 + 3)  // ответ: 'number33' потому что есть строка и знак сложения, происходит конкатенация 
'number33'
console.log(null + 3) // ответ: 3, потому что математическая операция и null в данном случае это 0
3
console.log(5 && "qwerty") // ответ "qwerty", потому что знак && ищет слева направо первое false или последнее true, в данном примере нет false, последнее true как раз "qwerty"
"qwerty"
console.log(+'40' + +'2' + "hillel")//ответ '42hillel' как стринга, несмотря на то, что в первых двух операндах стоит знак "+" и изменяет стрингу на число, есть дальше знак сложения и стринга, поэтому в итоге все равно получается стринга
'42hillel'
console.log('10' - 5 === 6) // ответ false, потому что стринга и знак минус, математическая операция, получается 5, а 5 не равно 6, поэтому false
false
console.log(true + false) // ответ 1, потому что true это 1, false это 0.
1
console.log('4px' - 3) // Ответ NaN потому что '4px' системе не понятно что это строка или число при математической операции
NaN
console.log('4' - 3) // математическая операция, знак минус, стринга превращается в число 4 - 3 = 1
1
console.log('6' + 3 ** 0) // ответ '61' потому что в начале происходит возведение строк в виду более высокого приоритета. Любое число при возведении в степень 0 равняется единице, далее строка '6' со знаком + происходит конкатенация, в итоге '6' + 1 =  '61'
'61'
console.log(12 / '6') // тут математическая операция, т.к. есть знак деления "/" 
2
console.log('10' + (5 === 6)) // первое дествие выполняется в скобках 5 не равно 6, это false, строка '10' и знак "+" выполняет конкатенацию строки 10 и  false
'10false'
console.log(null == '') // разные типы данных, поэтому false
false
console.log(3 ** (9 / 3)) // первое действие в скобках 9/3 равно 3 и далее 3 в 3 степени
27
console.log(!!'false' == !!'true')// ответ true потому что обе строки не пустые
true
console.log(1|| '0' && 1)// && имеет более высокий приоритет, поэтому в начале проверяем '0' && 1 и тут  нет false, а последнее true  1, дальше проверяем  22 || 1, тут первое true 22
1
console.log((+null == false) < 1) // В начале проверяем +null == false, тут будет true, потому что +null преобразует в число и будет равно 0, 0 и false будут равны в контексте сравнения значений, поэторму это true, true - это 1, которая не меньше 1, поэтому итоговый ответ false 
false
console.log(false && true || true)//в начале проверяется false && true, первое false - это false, дальше false || true, тут возвращается первое true - это true
true
console.log(false && (false || true)) // тут первое действие в скобках false || true, возвращается первое true - это true, далее проверка  false && true, тут возвращается первое false - это false
false
console.log((+null == false) < 1 ** 5) // в скобках первое действие  +null == false, тут будет true, потому что +null преобразует в число и будет равно 0, 0 и false будут равны в контексте сравнения значений, поэторму это true, true - это 1, 1 ** 5 - это 1, далее 1 < 1 - это false

